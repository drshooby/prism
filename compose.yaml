services:
  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio-admin
      MINIO_ROOT_PASSWORD: minio-admin-password
    command: server /data --console-address ":9001"
    networks:
      - backend
  
  infisical-secrets-manager:
    image: infisical/infisical:latest-postgres
    container_name: infisical-backend
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: production
      ENCRYPTION_KEY: 7a61cdc5a18fd9d1cc5f00d8202abd8f
      AUTH_SECRET: 05385f6703a5c724f379af5c7d1eb57e
      DB_CONNECTION_URI: postgresql://postgres:secondpass@infisical-db:5432/second_db
      REDIS_URL: redis://infisical-redis:6379
    depends_on:
      infisical-db:
        condition: service_healthy
      infisical-redis:
        condition: service_started
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  infisical-redis:
    image: redis:8
    container_name: infisical-redis
    ports:
      - "6379:6379"
    volumes:
      - infisical-redis-data:/data
    networks:
      - backend

  infisical-db:
    image: postgres:18-alpine
    container_name: infisical-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secondpass
      POSTGRES_DB: second_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=postgres && psql --username=postgres --list"]
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
      - infisical-db-data:/var/lib/postgresql
    networks:
      - backend

  echo-app:
    build:
      context: ./go-service/
      dockerfile: Dockerfile
    ports:
      - "1323:1323"
    environment:
      DB_HOST: database
      DB_USER: postgres
      DB_PASSWORD: test
      DB_NAME: prism
      DB_PORT: 5432
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
      minio:
        condition: service_started
      infisical-secrets-manager:
        condition: service_healthy
    networks:
      - backend

  database:
    image: postgres:18.0
    container_name: prism_db
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: prism
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d prism"]
      interval: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5432:5432" 
    volumes:
      - database-data:/var/lib/postgresql
    networks:
      - backend
    restart: always

  next-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - echo-app
    environment:
      - NODE_ENV=development
      - AUTH_DISCORD_ID=test-discord-client-id
      - AUTH_DISCORD_SECRET=test-discord-client-secret
      - DATABASE_URL=postgresql://postgres:test@database:5432/prism
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    restart: always
    networks:
      - backend

volumes:
  database-data:
  infisical-redis-data:
  infisical-db-data:

networks:
  backend:
